// Code generated by ent, DO NOT EDIT.

package like

import (
	"time"
)

const (
	// Label holds the string label denoting the like type in the database.
	Label = "like"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgePosts holds the string denoting the posts edge name in mutations.
	EdgePosts = "Posts"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// EdgeComments holds the string denoting the comments edge name in mutations.
	EdgeComments = "comments"
	// Table holds the table name of the like in the database.
	Table = "likes"
	// PostsTable is the table that holds the Posts relation/edge. The primary key declared below.
	PostsTable = "post_Likes"
	// PostsInverseTable is the table name for the Post entity.
	// It exists in this package in order to avoid circular dependency with the "post" package.
	PostsInverseTable = "posts"
	// OwnerTable is the table that holds the owner relation/edge. The primary key declared below.
	OwnerTable = "user_Likes"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// CommentsTable is the table that holds the comments relation/edge. The primary key declared below.
	CommentsTable = "comment_Likes"
	// CommentsInverseTable is the table name for the Comment entity.
	// It exists in this package in order to avoid circular dependency with the "comment" package.
	CommentsInverseTable = "comments"
)

// Columns holds all SQL columns for like fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
}

var (
	// PostsPrimaryKey and PostsColumn2 are the table columns denoting the
	// primary key for the Posts relation (M2M).
	PostsPrimaryKey = []string{"post_id", "like_id"}
	// OwnerPrimaryKey and OwnerColumn2 are the table columns denoting the
	// primary key for the owner relation (M2M).
	OwnerPrimaryKey = []string{"user_id", "like_id"}
	// CommentsPrimaryKey and CommentsColumn2 are the table columns denoting the
	// primary key for the comments relation (M2M).
	CommentsPrimaryKey = []string{"comment_id", "like_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
