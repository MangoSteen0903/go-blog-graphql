// Code generated by ent, DO NOT EDIT.

package post

const (
	// Label holds the string label denoting the post type in the database.
	Label = "post"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldContext holds the string denoting the context field in the database.
	FieldContext = "context"
	// FieldLikes holds the string denoting the likes field in the database.
	FieldLikes = "likes"
	// EdgeHashtags holds the string denoting the hashtags edge name in mutations.
	EdgeHashtags = "hashtags"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the post in the database.
	Table = "posts"
	// HashtagsTable is the table that holds the hashtags relation/edge. The primary key declared below.
	HashtagsTable = "post_hashtags"
	// HashtagsInverseTable is the table name for the Hashtag entity.
	// It exists in this package in order to avoid circular dependency with the "hashtag" package.
	HashtagsInverseTable = "hashtags"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "posts"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "user_posts"
)

// Columns holds all SQL columns for post fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldContext,
	FieldLikes,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "posts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_posts",
}

var (
	// HashtagsPrimaryKey and HashtagsColumn2 are the table columns denoting the
	// primary key for the hashtags relation (M2M).
	HashtagsPrimaryKey = []string{"post_id", "hashtag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultLikes holds the default value on creation for the "Likes" field.
	DefaultLikes int
)
